<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
    xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.redhat.fis.amq</groupId>
    <artifactId>fis-camel-amq-forwarder</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <name>FIS :: AMQ :: Forwarder :: Java :: Camel ActiveMQ Routes</name>

    <description>Camel routes (Spring XML, Java Container) managing ActiveMQ brokers</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk.target>1.7</jdk.target>

        <!-- Build Timestamp -->
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
        <timestamp>${maven.build.timestamp}</timestamp>

        <!-- Versions -->
        <fuse.version>6.2.1.redhat-084</fuse.version>
        <fabric8.version>2.2.0.redhat-079</fabric8.version>
        <docker.maven.plugin.version>0.13.6</docker.maven.plugin.version>

        <!-- Fabric8 Properties -->
        <fabric8.label.container>java</fabric8.label.container>
        <fabric8.iconRef>camel</fabric8.iconRef>
        <fabric8.label.component>${project.artifactId}</fabric8.label.component>
        <fabric8.dockerUser>fabric8/</fabric8.dockerUser>
        <fabric8.label.group>fis-demo</fabric8.label.group>

        <!-- Docker Properties -->
        <docker.image>${fabric8.dockerUser}${project.artifactId}:${project.version}</docker.image>
        <docker.port.container.jolokia>8778</docker.port.container.jolokia>
        <docker.from>jboss-fuse-6/fis-java-openshift:1.0</docker.from>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-project-bom-with-platform-deps</artifactId>
                <version>${fabric8.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.fuse.bom</groupId>
                <artifactId>jboss-fuse-parent</artifactId>
                <version>${fuse.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Camel Components -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jms</artifactId>
        </dependency>

        <!-- ActiveMQ -->
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-camel</artifactId>
        </dependency>

        <!-- To instanciate a local Active-MQ -->        
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-broker</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-kahadb-store</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>

        <!-- Others -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-spring</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>fabric8-arquillian</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <defaultGoal>install</defaultGoal>

        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>${jdk.target}</source>
                    <target>${jdk.target}</target>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <inherited>true</inherited>
                <configuration>
                    <excludes>
                        <exclude>**/*KT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>${fabric8.version}</version>
                <executions>
                    <execution>
                        <id>json</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>json</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>hawt-app-maven-plugin</artifactId>
                <version>${fabric8.version}</version>
                <executions>
                    <execution>
                        <id>hawt-app</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <javaMainClass>org.apache.camel.spring.Main</javaMainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <configuration>
                    <images>
                        <image>
                            <name>${docker.image}</name>
                            <build>
                                <from>${docker.from}</from>
                                <assembly>
                                    <basedir>/deployments</basedir>
                                    <descriptorRef>hawt-app</descriptorRef>
                                </assembly>
                                <env>
                                    <JAVA_LIB_DIR>/deployments/lib</JAVA_LIB_DIR>
                                    <JAVA_MAIN_CLASS>org.apache.camel.spring.Main</JAVA_MAIN_CLASS>
                                    <FIS_DEMO_CAMEL_AMQ_SERVICE_HOST>pom-service-host</FIS_DEMO_CAMEL_AMQ_SERVICE_HOST>
                                    <FIS_DEMO_CAMEL_AMQ_SERVICE_PORT>pom-service-port</FIS_DEMO_CAMEL_AMQ_SERVICE_PORT>
                                    <FIS_DEMO_CAMEL_AMQ_ENVIRONMENT>pom-env</FIS_DEMO_CAMEL_AMQ_ENVIRONMENT>
                                    <OTHERENV>pom-other</OTHERENV>
                                </env>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
            
            <!-- Testing Camel Routes -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <configuration>
                    <mainClass>org.apache.camel.spring.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>io.fabric8</groupId>
                                        <artifactId>fabric8-maven-plugin</artifactId>
                                        <versionRange>[2.2.0.redhat-079,)</versionRange>
                                        <goals>
                                            <goal>json</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <!--
        Default sample commands:

        mvn -Pf8-build         ... build Docker images and create OpenShift deployment configs
        mvn -Pf8-deploy        ... f8-build + push to Docker registry + applying deployment config to OpenShift
        mvn -Pf8-local-deploy  ... deployment for a single node setup without pushing to a registry

        For individual goal usage please consult the fabric8 documentation
    -->
    <profiles>
        <profile>
            <id>f8-build</id>
            <build>
                <defaultGoal>clean install docker:build fabric8:json</defaultGoal>
            </build>
        </profile>
        <profile>
            <id>f8-deploy</id>
            <build>
                <defaultGoal>clean install docker:build docker:push fabric8:json fabric8:apply</defaultGoal>
            </build>
            <properties>
                <fabric8.recreate>true</fabric8.recreate>
                <fabric8.imagePullPolicySnapshot>Always</fabric8.imagePullPolicySnapshot>
            </properties>
        </profile>
        <profile>
            <id>f8-local-deploy</id>
            <build>
                <defaultGoal>clean install docker:build fabric8:json fabric8:apply</defaultGoal>
            </build>
            <properties>
                <fabric8.recreate>true</fabric8.recreate>
            </properties>
        </profile>
    </profiles>
</project>
